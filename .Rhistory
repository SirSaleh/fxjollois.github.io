subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca), select = -ca),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12), select = -ca),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "mois_no")
)
ca_evol = merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca), select = -ca),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12), select = -ca),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "mois_no")
)
names(groupe)
ca_evol = merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca), select = -ca),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12), select = -ca),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe"
"mois_no")
)
ca_evol = merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca), select = -ca),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12), select = -ca),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois_no")
)
names(mois)
ca_evol = merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca), select = -ca),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12), select = -ca),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois_no", "mois", "mois_numero", "annee")
)
ca_evol = merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee)),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12),
select = -c(ca, annee)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois_no", "mois", "mois_numero")
)
View(ca_evol)
ca_evol = transform(
merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee, no)),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12),
select = -c(ca, annee, no)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois_no", "mois", "mois_numero")
),
evolution = ca2004 - ca2003
)
View(ca_evol)
ca_evol = transform(
merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee, no)),
subset(transform(subset(ca_tout, annee == 2004),
ca2004 = ca, mois_no = mois_no - 12),
select = -c(ca, annee, no)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois_no", "mois", "mois_numero")
),
evolution = round(ca2004 - ca2003, 1)
)
View(ca_evol)
rm(M)
rm(pp)
aggregate(cbind(ca2003, ca2004, evolution) ~ mois + mois_numero, sum)
aggregate(cbind(ca2003, ca2004, evolution) ~ mois + mois_numero, ca_evol, sum)
kable(subsetaggregate(cbind(ca2003, ca2004, evolution) ~ mois + mois_numero, ca_evol, sum), select = -mois_numero)
kable(subset(aggregate(cbind(ca2003, ca2004, evolution) ~ mois + mois_numero, ca_evol, sum), select = -mois_numero))
aggregate(ca ~ mois + mois_numero, subset(ca, annee == 2003), sum)
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum)
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois", "mois_numero")
)
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois", "mois_numero")
),
select = -mois_numero
)
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois_numero", "mois")
),
select = -mois_numero
)
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois_numero")
),
select = -mois_numero
)
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois_numero")
),
select = -c(mois_numero, mois.y)
)
setNames(
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois_numero")
),
select = -c(mois_numero, mois.y)
),
c("mois", "ca2003", "ca2004")
)
transform(
setNames(
subset(
merge(
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2003), sum),
aggregate(ca ~ mois + mois_numero, subset(ca_tout, annee == 2004), sum),
by = c("mois_numero")
),
select = -c(mois_numero, mois.y)
),
c("mois", "ca2003", "ca2004")
),
evolution = ca2004 - ca2003
)
kable(subset(aggregate(cbind(ca2003, ca2004, evolution) ~ mois + mois_numero, ca_evol, sum), select = -mois_numero))
subset(ca, annee == 2003)
subset(merge(ca, mois, by.x = "mois_no", by.y = "no"), annee == 2003)
names(mois)
a = merge(
subset(merge(ca, mois, by.x = "mois_no", by.y = "no"), annee == 2003),
subset(merge(ca, mois, by.x = "mois_no", by.y = "no"), annee == 2004),
by = c("mois", "mois_numero", "groupe_no", "prov_no")
)
names(a)
etape1 = merge(ca, provenance, by.x = "prov_no", by.y = "no")
etape2 = merge(etape1, groupe, by.x = "groupe_no", by.y = "no")
ca_tout_bis = merge(etape2, mois, by.x = "mois_no", by.y = "no")
identical(ca_tout, ca_tout_bis)
identical(ca_tout, ca_tout_bis)
ca_evol = transform(
merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee, no)),
subset(transform(subset(ca_tout, annee == 2004), ca2004 = ca),
select = -c(ca, annee, no)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
),
evolution = round(ca2004 - ca2003, 1)
)
# Partie 2003
#   - restriction à l'année 2003
evol2003a = subset(ca_tout, annee == 2003)
#   - création d'une nouvelle variable ca2003 pour l'utiliser plus tard
evol2003b = transform(evol2003a, ca2003 = ca)
#   - supression des variables inutiles : ca, annee, no
evol2003c = subset(evol2003b, select = -c(ca, annee, no))
# Partie 2004
#   - restriction à l'année 2004
evol2004a = subset(ca_tout, annee == 2004)
#   - création d'une nouvelle variable ca2004 pour l'utiliser plus tard
evol2004b = transform(evol2004a, ca2004 = ca)
#   - supression des variables inutiles : ca, annee, no
evol2004c = subset(evol2004b, select = -c(ca, annee, no))
# Jointure entre les deux parties, sur tous les attributs en commun, sauf
evol = merge(
evol2003c,
evol2004c,
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
)
ca_evol_bis = transform(evol, evolution = round(ca2004 - ca2003, 1))
warnings()
ca = read.table("donnees/ca/ca.csv", sep = ";", header = T)
groupe = read.table("donnees/ca/groupe.csv", sep = ";", header = T, quote = NULL)
mois = read.table("donnees/ca/mois.csv", sep = ";", header = T)
provenance = read.table("donnees/ca/provenance.csv", sep = ";", header = T)
# Jointure entre ca et provenance
etape1 = merge(ca, provenance, by.x = "prov_no", by.y = "no")
# Jointure du résultat avec groupe
etape2 = merge(etape1, groupe, by.x = "groupe_no", by.y = "no")
# Enfin, jointure du résultat précédent avec mois
ca_tout_bis = merge(etape2, mois, by.x = "mois_no", by.y = "no")
# Remplacement de chaque var temporaire par son calcul
# Le code est indenté pour plus de clarté
ca_tout = merge(
merge(
merge(
ca,
provenance,
by.x = "prov_no", by.y = "no"
),
groupe,
by.x = "groupe_no", by.y = "no"
),
mois,
by.x = "mois_no", by.y = "no"
)
identical(ca_tout, ca_tout_bis)
evol2003a = subset(ca_tout, annee == 2003)
evol2003b = transform(evol2003a, ca2003 = ca)
evol2003c = subset(evol2003b, select = -c(ca, annee, no))
evol2004a = subset(ca_tout, annee == 2004)
evol2004b = transform(evol2004a, ca2004 = ca)
evol2004c = subset(evol2004b, select = -c(ca, annee, no))
evol = merge(
evol2003c,
evol2004c,
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
)
ca_evol_bis = transform(evol, evolution = round(ca2004 - ca2003, 1))
names(evol2004c)
ca_evol_bis = transform(evol, evolution = round(ca2004 - ca2003, 1))
names(ca_evol_bis)
# Partie 2003
#   - restriction à l'année 2003
evol2003a = subset(ca_tout, annee == 2003)
#   - création d'une nouvelle variable ca2003 pour l'utiliser plus tard
evol2003b = transform(evol2003a, ca2003 = ca)
#   - supression des variables inutiles : ca, annee, no, mois_no
evol2003c = subset(evol2003b, select = -c(ca, annee, no, mois_no))
# Partie 2004
#   - restriction à l'année 2004
evol2004a = subset(ca_tout, annee == 2004)
#   - création d'une nouvelle variable ca2004 pour l'utiliser plus tard
evol2004b = transform(evol2004a, ca2004 = ca)
#   - supression des variables inutiles : ca, annee, no, mois_no
evol2004c = subset(evol2004b, select = -c(ca, annee, no, mois_no))
# Jointure entre les deux parties, sur tous les attributs en commun, sauf
evol = merge(
evol2003c,
evol2004c,
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
)
ca_evol_bis = transform(evol, evolution = round(ca2004 - ca2003, 1))
names(ca_evol_bis)
ca_evol = transform(
merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee, no, mois_no)),
subset(transform(subset(ca_tout, annee == 2004), ca2004 = ca),
select = -c(ca, annee, no, mois_no)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
),
evolution = round(ca2004 - ca2003, 1)
)
names(ca_evol_)
names(ca_evol)
identical(ca_evol, ca_evol_bis)
autre1 = merge(ca, mois, by.x = "mois_no", by.y = "no")
autre2003a = subset(autre1, annee == 2003)
autre2003b = transform(autre2003a, ca2003 = ca)
names(autre2003b)
autre2003c = subset(autre2003b, select = -c(no, mois_no, ca))
autre2004b = transform(autre2004a, ca2004 = ca)
autre2004c = subset(autre2004b, select = -c(no, mois_no, ca))
autre2004a = subset(autre1, annee == 2004)
autre2004b = transform(autre2004a, ca2004 = ca)
autre2004c = subset(autre2004b, select = -c(no, mois_no, ca))
autre = merge(autre2003c, autre2004c)
names(autre2003c)
names(autre2004c)
autre1 = merge(ca, mois, by.x = "mois_no", by.y = "no")
autre2003a = subset(autre1, annee == 2003)
autre2003b = transform(autre2003a, ca2003 = ca)
autre2003c = subset(autre2003b, select = -c(ca, annee, no, mois_no))
autre2004a = subset(autre1, annee == 2004)
autre2004b = transform(autre2004a, ca2004 = ca)
autre2004c = subset(autre2004b, select = -c(ca, annee, no, mois_no))
autre = merge(autre2003c, autre2004c)
autre2 = merge(autre2003c, autre2004c)
names(autre2)
autre3 = merge(autre2, provenance, by.x = "prov_no", by.y = "prov")
autre3 = merge(autre2, provenance, by.x = "prov_no", by.y = "no")
autre = merge(autre3, groupe, by.x = "groupe_no", by.y = "no")
identical(evol, autre)
names(evol)
names(autre)
autre = transform(autre, evolution = ca2004 - ca2003)
autre4 = merge(autre3, groupe, by.x = "groupe_no", by.y = "no")
autre = transform(autre4, evolution = ca2004 - ca2003)
identical(evol, autre)
names(evol)
names(autre)
names(ca_evol)
ca_autre = transform(autre4, evolution = ca2004 - ca2003)
identical(ca_evol, ca_autre)
names(ca_evol)
names(ca_autre)
identical(ca_evol, ca_autre[names(ca_evol)])
names(ca_autre[names(ca_evol)])
View(ca_autre)
View(ca_evol)
ca_autre = transform(
merge(
merge(
merge(
subset(
transform(
subset(
merge(ca, mois, by.x = "mois_no", by.y = "no"),
annee == 2003
),
ca2003 = ca
),
select = -c(ca, annee, no, mois_no)
),
subset(
transform(
subset(
merge(ca, mois, by.x = "mois_no", by.y = "no"),
annee == 2004
),
ca2004 = ca
),
select = -c(ca, annee, no, mois_no)
)
),
provenance,
by.x = "prov_no", by.y = "no"
),
groupe, by.x = "groupe_no", by.y = "no"),
evolution = ca2004 - ca2003
)
identical(ca_autre, ca_autre_bis)
autre1 = merge(ca, mois, by.x = "mois_no", by.y = "no")
autre2003a = subset(autre1, annee == 2003)
autre2003b = transform(autre2003a, ca2003 = ca)
autre2003c = subset(autre2003b, select = -c(ca, annee, no, mois_no))
autre2004a = subset(autre1, annee == 2004)
autre2004b = transform(autre2004a, ca2004 = ca)
autre2004c = subset(autre2004b, select = -c(ca, annee, no, mois_no))
autre2 = merge(autre2003c, autre2004c)
autre3 = merge(autre2, provenance, by.x = "prov_no", by.y = "no")
autre4 = merge(autre3, groupe, by.x = "groupe_no", by.y = "no")
ca_autre_bis = transform(autre4, evolution = ca2004 - ca2003)
identical(ca_autre, ca_autre_bis)
order(ca_evol$evolution)
?order
??tie
length(unique(ca_evol$evolution))
length(ca_evol$evolution)
# Partie 2003
#   - restriction à l'année 2003
evol2003a = subset(ca_tout, annee == 2003)
#   - création d'une nouvelle variable ca2003 pour l'utiliser plus tard
evol2003b = transform(evol2003a, ca2003 = ca)
#   - supression des variables inutiles : ca, annee, no, mois_no
evol2003c = subset(evol2003b, select = -c(ca, annee, no, mois_no))
# Partie 2004
#   - restriction à l'année 2004
evol2004a = subset(ca_tout, annee == 2004)
#   - création d'une nouvelle variable ca2004 pour l'utiliser plus tard
evol2004b = transform(evol2004a, ca2004 = ca)
#   - supression des variables inutiles : ca, annee, no, mois_no
evol2004c = subset(evol2004b, select = -c(ca, annee, no, mois_no))
# Jointure entre les deux parties, sur tous les attributs en commun, sauf
evol = merge(
evol2003c,
evol2004c,
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
)
ca_evol_bis = transform(evol, evolution = ca2004 - ca2003, 1)
ca_evol = transform(
merge(
subset(transform(subset(ca_tout, annee == 2003), ca2003 = ca),
select = -c(ca, annee, no, mois_no)),
subset(transform(subset(ca_tout, annee == 2004), ca2004 = ca),
select = -c(ca, annee, no, mois_no)),
by = c("prov_no", "code_prov", "provenance",
"groupe_no", "code_dep", "departement",
"code_groupe", "groupe", "code_sgroupe", "sous_groupe",
"mois", "mois_numero")
),
evolution = ca2004 - ca2003
)
length(ca_evol$evolution)
length(unique(ca_evol$evolution))
?order
comp1 = transform(ca_evol, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
length(unique(comp1$ordre))
comp1 = transform(ca_evol, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
comp2 = transform(ca_autre, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
identical(comp1[order(comp1$ordre),], comp2[order(comp2$ordre),])
identical(comp1[order(comp1$ordre),], comp2[order(comp2$ordre),names(comp1)])
length(unique(comp2$ordre))
View(comp1)
View(comp2)
comp1 = comp1[order(comp1$ordre),]
comp2 = comp2[order(comp2$ordre),names(comp1)]
View(comp1)
View(comp2)
rownames(comp1) = 1:nrow(comp1)
rownames(comp2) = 1:nrow(comp2)
identical(comp1, comp2)
comp1 = transform(ca_evol, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
comp1 = comp1[order(comp1$ordre),]
rownames(comp1) = 1:nrow(comp1)
comp2 = transform(ca_autre, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
comp2 = comp2[order(comp2$ordre),]
rownames(comp2) = 1:nrow(comp2)
identical(comp1, comp2)
comp1 = transform(ca_evol, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
comp1 = comp1[order(comp1$ordre),]
rownames(comp1) = 1:nrow(comp1)
comp2 = transform(ca_autre, ordre = paste(mois_numero, groupe_no, prov_no, sep = "-"))
comp2 = comp2[order(comp2$ordre),names(comp1)]
rownames(comp2) = 1:nrow(comp2)
identical(comp1, comp2)
identical(comp1, comp2)
kable(aggregate(ca ~ provenance, ca_tout, sum))
merge(aggregate(Sepal.Length ~ Species, iris, mean),
aggregate(Sepal.Length ~ Species, iris, median))
merge(aggregate(Sepal.Length ~ Species, iris, mean),
aggregate(Sepal.Length ~ Species, iris, median),
by = "Species")
setNames(
merge(aggregate(Sepal.Length ~ Species, iris, mean),
aggregate(Sepal.Length ~ Species, iris, median),
by = "Species"),
c("Espèce", "Moyenne", "Médiane")
)
heart = read.table("donnees/heart.txt", header = T)
heartM = subset(heart, subset = sexe == "M")
heartM = subset(heart, subset = sexe == "masculin")
heartMbis = subset(heartM, select = c(type_douleur, sucre, electro, vaisseau,
angine, depression))
heartMter = transform(heartMbis,
nbA = (type_douleur == "A") + (sucre == "A") +
(electro == "A") + (vaisseau == "A"))
heartMter = transform(heartMbis,
nbA = (type_douleur == "A") + (sucre == "A") +
(electro == "A") + (vaisseau == "A"),
flag = factor(angine == "oui",
labels = c("attention", "probleme")))
tabe(heartMter$flag)
table(heartMter$flag)
heartMter = transform(heartMbis,
nbA = (type_douleur == "A") + (sucre == "A") +
(electro == "A") + (vaisseau == "A"),
flag = factor(angine == "oui" & depression >= 4,
labels = c("attention", "probleme")))
table(heartMter$flag)
aggregate(cholester ~ coeur, heart, mean)
aggregate(coeur ~ coeur, heart, length)
aggregate(. ~ coeur, heart, length)
aggregate(age ~ coeur, heart, length)
merge(aggregate(cholester ~ coeur, heart, mean),
aggregate(age ~ coeur, heart, length))
setNames(aggregate(age ~ coeur, heart, length), c("coeur", "nb"))
merge(aggregate(cholester ~ coeur, heart, mean),
setNames(aggregate(age ~ coeur, heart, length), c("coeur", "nb")))
aggregate(. ~ coeur, heart, mean)
summary(heart)
# pic et depression sont des quantis discrètes a priori
aggregate(. ~ coeur,
subset(heart, select = c(age, pression, cholester,
taux_max, depression, pic)),
mean)
# pic et depression sont des quantis discrètes a priori
aggregate(. ~ coeur,
subset(heart, select = c(age, pression, cholester,
taux_max, depression, pic,
coeur)),
mean)
aggregate(age ~ angine + coeur, heart, mean)
