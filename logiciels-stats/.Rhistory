subset(Sports,
subset = Libelle == "Hockey")
)
merge(
Gymnases,
merge(
subset(Seances,
subset = Horaire >= 15 & tolower(Jour) == "mercredi"),
subset(Sports,
subset = Libelle == "Hockey")
)
)
subset(
merge(
Gymnases,
merge(
subset(Seances,
subset = Horaire >= 15 & tolower(Jour) == "mercredi"),
subset(Sports,
subset = Libelle == "Hockey")
)
),
select = c(Ville, NomGymnase, Jour, Horaire, Duree)
)
subset(Sportifs, subset = Sexe = "F")
subset(Sportifs, subset = Sexe == "F")
subset(Sports, subset = Libelle == "Basket ball")
merge(Jouer, subset(Sports, subset = Libelle == "Basket ball"))
merge(subset(Sportifs, subset = Sexe == "F"),
merge(Jouer, subset(Sports, subset = Libelle == "Basket ball")))
aggregate(
Age ~ 1,
data = merge(subset(Sportifs, subset = Sexe == "F"),
merge(Jouer, subset(Sports, subset = Libelle == "Basket ball"))),
mean
)
aggregate(IdSport ~ IdSportif, Jouer, length)
?aggregate
?setNames
(aggregate(IdSport ~ IdSportif, Jouer, length)
)
setNames(aggregate(IdSport ~ IdSportif, Jouer, length), c("IdSportif", "NbSports")
)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
)
)
subset(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
)
),
select = c(Nom, Prenom, NbSports)
)
subset(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
select = c(Nom, Prenom, NbSports)
)
subset(
transform(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
NbSports = NbSports + 0
),
select = c(Nom, Prenom, NbSports)
)
subset(
transform(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
NbSports = replace(NbSports, which(is.na(NbSports)), 0)
),
select = c(Nom, Prenom, NbSports)
)
subset(Gymnases, subset = Ville == "MONTMORENCY")
merge(Seances, Sports)
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY"),
merge(Seances, Sports)
)
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY"),
merge(Seances, Sports)
),
length
)
aggregate(IdSport ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY"),
merge(Seances, Sports)
),
length
)
aggregate(IdSport ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = NomGymnase),
merge(Seances, Sports)
),
length
)
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = NomGymnase),
merge(Seances, Sports)
)
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = c(IdGymnase, NomGymnase)),
merge(Seances, Sports)
)
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle)
)
)
aggregate(1 ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
length
)
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
length
)
merge(merge(Gymnases, Seances), Sports)
subset(merge(merge(Gymnases, Seances), Sports), subset = Ville == "MONTMORENCY")
subset(merge(merge(Gymnases, Seances), Sports), subset = Ville == "MONTMORENCY", select = c(NomGymnase, Jour, Libelle))
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "MONTMORENCY", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
length
)
subset(merge(merge(Gymnases, Seances), Sports), subset = Ville == "SARCELLES", select = c(NomGymnase, Jour, Libelle))
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "SARCELLE", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
length
)
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "SARCELLE", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(NomGymnase, Jour, Libelle))
),
length
)
merge(
subset(Gymnases, subset = Ville == "SARCELLE", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
)
aggregate(. ~ NomGymnase + Libelle + tolower(Jour),
merge(
subset(Gymnases, subset = Ville == "SARCELLES", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
length
)
aggregate(. ~ NomGymnase + Libelle + Jour,
transform(
merge(
subset(Gymnases, subset = Ville == "SARCELLES", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
Jour = tolower(Jour)
),
length
)
setNames(
aggregate(
. ~ NomGymnase + Libelle + Jour,
transform(
merge(
subset(Gymnases, subset = Ville == "SARCELLES", select = c(IdGymnase, NomGymnase)),
subset(merge(Seances, Sports), select = c(IdGymnase, Jour, Libelle))
),
Jour = tolower(Jour)
),
length
),
c("Gymnase", "Sport", "Jour", "Nb Seances")
)
subset(Sports, subset = Libelle == "Hand ball")
merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball"))
merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur")
names(Seances)
merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur")
subset(merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur"), select = c(Nom, Prenom, Jour, Horaire))
transform(subset(merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur"), select = c(Nom, Prenom, Jour, Horaire)), Jour = tolower(Jour))
aggreagte(. ~ Nom + Prenom + Jour, transform(subset(merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur"), select = c(Nom, Prenom, Jour, Horaire)), Jour = tolower(Jour)), length)
aggregate(. ~ Nom + Prenom + Jour, transform(subset(merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur"), select = c(Nom, Prenom, Jour, Horaire)), Jour = tolower(Jour)), length)
aggregate(. ~ Jour + Nom + Prenom, transform(subset(merge(merge(Sportifs, merge(Entrainer, subset(Sports, subset = Libelle == "Hand ball")), by.x = "IdSportif", by.y = "IdSportifEntraineur"), Seances, by.x = "IdSportif", by.y = "IdSportifEntraineur"), select = c(Nom, Prenom, Jour, Horaire)), Jour = tolower(Jour)), length)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbJ")
),
all.x = T
)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Arbitrer, length),
c("IdSportif", "NbA")
),
all.x = T
)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length),
c("IdSportif", "NbJ")
),
all.x = T
)
merge(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbJ")
),
all.x = T
),
setNames(
aggregate(IdSport ~ IdSportif, Arbitrer, length),
c("IdSportif", "NbA")
),
all.x = T
)
merge(
merge(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbJ")
),
all.x = T
),
setNames(
aggregate(IdSport ~ IdSportif, Arbitrer, length),
c("IdSportif", "NbA")
),
all.x = T
),
setNames(
aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length),
c("IdSportif", "NbE")
),
all.x = T
)
merge(
merge(
merge(
subset(Sportifs, select = c(IdSportif, Nom, Prenom)),
setNames(aggregate(IdSport ~ IdSportif, Jouer, length), c("IdSportif", "NbJ")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportif, Arbitrer, length), c("IdSportif", "NbA")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length), c("IdSportif", "NbE")),
all.x = T
)
transform(
merge(
merge(
merge(
subset(Sportifs, select = c(IdSportif, Nom, Prenom)),
setNames(aggregate(IdSport ~ IdSportif, Jouer, length), c("IdSportif", "NbJ")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportif, Arbitrer, length), c("IdSportif", "NbA")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length), c("IdSportif", "NbE")),
all.x = T
),
NbJ = replace(NbJ, which(is.na(NbJ)), 0)
)
transform(
merge(
merge(
merge(
subset(Sportifs, select = c(IdSportif, Nom, Prenom)),
setNames(aggregate(IdSport ~ IdSportif, Jouer, length), c("IdSportif", "NbJ")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportif, Arbitrer, length), c("IdSportif", "NbA")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length), c("IdSportif", "NbE")),
all.x = T
),
NbJ = replace(NbJ, which(is.na(NbJ)), 0),
NbA = replace(NbA, which(is.na(NbA)), 0),
NbE = replace(NbE, which(is.na(NbE)), 0)
)
b5 = transform(
merge(
merge(
merge(
subset(Sportifs, select = c(IdSportif, Nom, Prenom)),
setNames(aggregate(IdSport ~ IdSportif, Jouer, length), c("IdSportif", "NbJ")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportif, Arbitrer, length), c("IdSportif", "NbA")),
all.x = T
),
setNames(aggregate(IdSport ~ IdSportifEntraineur, Entrainer, length), c("IdSportif", "NbE")),
all.x = T
),
NbJ = replace(NbJ, which(is.na(NbJ)), 0),
NbA = replace(NbA, which(is.na(NbA)), 0),
NbE = replace(NbE, which(is.na(NbE)), 0)
)
dim(b5)
sum(b5$NbE)
sum(b5$NbE > 0)
nrow(Entrainer)
length(unique(Entrainer$IdSportifEntraineur))
aggregate(Age ~ 1, Sportifs, min)
merge(Sportifs, aggregate(Age ~ 1, Sportifs, min))
subset(
merge(Sportifs, aggregate(Age ~ 1, Sportifs, min)),
select = c(Nom, Prenom)
)
aggregate(
Horaire ~ IdGymnase,
Seances,
min
)
aggregate(
Horaire ~ IdGymnase,
Seances,
function (sub) { print(sub); return (min); }
)
aggregate(
Horaire ~ IdGymnase,
Seances,
function (sub) { print(sub); return (min(sub)); }
)
aggregate(
Horaire ~ IdGymnase,
Seances,
function (sub) { print(sub); return (c(min = min(sub)); }
)
aggregate(
Horaire ~ IdGymnase,
Seances,
function (sub) { print(sub); return (c(min = min(sub))); }
)
aggregate(
Horaire ~ IdGymnase,
Seances,
function (sub) { print(sub); return (c(min = min(sub), max = max(sub))); }
)
aggregate(
Horaire ~ NomGymnase + Jour,
subset(merge(Gymnases, Seances), subset = Ville == "STAINS"),
function (sub) { print(sub); return (c(min = min(sub), max = max(sub))); }
)
aggregate(
Horaire ~ NomGymnase + Jour,
subset(merge(Gymnases, Seances), subset = Ville == "STAINS"),
function (sub) { return (c(min = min(sub), max = max(sub))); }
)
aggregate(
Horaire ~ Jour + NomGymnase,
subset(merge(Gymnases, Seances), subset = Ville == "STAINS"),
function (sub) { return (c(min = min(sub), max = max(sub))); }
)
aggregate(
Horaire ~ Jour + NomGymnase,
transform(subset(merge(Gymnases, Seances), subset = Ville == "STAINS"), Jour = tolower(Jour)),
function (sub) { return (c(min = min(sub), max = max(sub))); }
)
aggregate(
Horaire ~ Jour + NomGymnase,
transform(subset(merge(Gymnases, Seances), subset = Ville == "STAINS"), Jour = tolower(Jour)),
function (sub) { return (c(Min = min(sub), max = Max(sub))); }
)
aggregate(
Horaire ~ Jour + NomGymnase,
transform(subset(merge(Gymnases, Seances), subset = Ville == "STAINS"), Jour = tolower(Jour)),
function (sub) { return (c(Min = min(sub), Max = max(sub))); }
)
unique(subset(
merge(Sportifs,
merge(Jouer, Entrainer, by.x = "IdSportif", by.y = "IdSportifEntraineur")),
select = c(Nom, Prenom)
))
aggregate(
Age ~ 1,
data = merge(subset(Sportifs, subset = Sexe == "F"),
merge(Jouer, subset(Sports, subset = Libelle == "Basket ball"))),
mean
)
Jouer
aggregate(IdSport ~ IdSportif, Jouer, length)
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
)
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
)
transform(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
NbSports = replace(NbSports, which(is.na(NbSports)), 0)
)
subset(
transform(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
NbSports = replace(NbSports, which(is.na(NbSports)), 0)
),
select = c(Nom, Prenom, NbSports)
)
subset(
transform(
merge(
Sportifs,
setNames(
aggregate(IdSport ~ IdSportif, Jouer, length),
c("IdSportif", "NbSports")
),
all.x = T
),
NbSports = replace(NbSports, which(is.na(NbSports)), 0)
),
select = c(Nom, Prenom, NbSports)
)
aggregate(
Horaire ~ Jour + NomGymnase,
transform(
subset(merge(Gymnases, Seances),
subset = Ville == "STAINS"),
Jour = tolower(Jour)),
function (sub) { return (c(Min = min(sub), Max = max(sub))); }
)
mafonction <- function (sub) {
return (c(Min = min(sub), Max = max(sub)));
}
mafonction(1:5)
aggregate(
Horaire ~ Jour + NomGymnase,
transform(
subset(merge(Gymnases, Seances),
subset = Ville == "STAINS"),
Jour = tolower(Jour)),
mafonction
)
